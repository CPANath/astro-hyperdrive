---
const { page } = Astro.props;

const generatePagination = (currentPage: number, totalPages: number) => {
	const delta = 2;
	const range: number[] = [];
	const rangeWithDots: (number | string)[] = [];
	let l: number | undefined;

	for (let i = 1; i <= totalPages; i++) {
		if (i === 1 || i === totalPages || (i >= currentPage - delta && i <= currentPage + delta)) {
			range.push(i);
		}
	}

	for (let i of range) {
		if (l !== undefined) {
			if (i - l === 2) {
				rangeWithDots.push(l + 1);
			} else if (i - l !== 1) {
				rangeWithDots.push("...");
			}
		}
		rangeWithDots.push(i);
		l = i;
	}

	return rangeWithDots;
};

const paginationRange = generatePagination(page.currentPage, page.lastPage);
---

<div class="mt-8 bg-white">
	<nav class="flex items-center justify-between px-8 font-medium text-base">
		<div class="flex w-0 flex-1">
			{
				page.url.prev ? (
					<a href={page.url.prev} class="inline-flex items-center transition hover:lg:-translate-x-1">
						<svg
							class="mr-3 size-6"
							viewBox="0 0 20 20"
							fill="currentColor"
							aria-hidden="true"
							data-slot="icon"
						>
							<path
								fill-rule="evenodd"
								d="M18 10a.75.75 0 0 1-.75.75H4.66l2.1 1.95a.75.75 0 1 1-1.02 1.1l-3.5-3.25a.75.75 0 0 1 0-1.1l3.5-3.25a.75.75 0 1 1 1.02 1.1l-2.1 1.95h12.59A.75.75 0 0 1 18 10Z"
								clip-rule="evenodd"
							/>
						</svg>
						Previous
					</a>
				) : null
			}
		</div>

		<div class="hidden md:flex text-lg">
			{
				paginationRange.map((pageNumber) =>
					pageNumber === "..." ? (
						<span class="inline-flex items-center px-4 py-1.5 text-gray-500">...</span>
					) : (
						<a
							href={pageNumber === 1 ? "/cars" : `/cars/${pageNumber}`}
							class={`inline-flex items-center px-4 py-1.5 transition ${page.currentPage === pageNumber ? "bg-yellow-200" : "hover:bg-yellow-100"}`}
							aria-current={page.currentPage === pageNumber ? "page" : undefined}
						>
							{pageNumber}
						</a>
					)
				)
			}
		</div>

		<div class="flex w-0 flex-1 justify-end">
			{
				page.url.next ? (
					<a href={page.url.next} class="inline-flex items-center transition hover:lg:translate-x-1">
						Next
						<svg
							class="ml-3 size-5"
							viewBox="0 0 20 20"
							fill="currentColor"
							aria-hidden="true"
							data-slot="icon"
						>
							<path
								fill-rule="evenodd"
								d="M2 10a.75.75 0 0 1 .75-.75h12.59l-2.1-1.95a.75.75 0 1 1 1.02-1.1l3.5 3.25a.75.75 0 0 1 0 1.1l-3.5 3.25a.75.75 0 1 1-1.02-1.1l2.1-1.95H2.75A.75.75 0 0 1 2 10Z"
								clip-rule="evenodd"
							/>
						</svg>
					</a>
				) : null
			}
		</div>
	</nav>
</div>
