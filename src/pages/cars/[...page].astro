---
export const prerender = false;
import { getCollection, type CollectionEntry } from "astro:content";
import type { GetStaticPaths, Page } from "astro";
import { siteName } from "~/data/config";
import Layout from "~/layouts/Layout.astro";
import Section from "~/components/Section.astro";
import Container from "~/components/Container.astro";
import Heading from "~/components/Heading.astro";
import CardCar from "~/components/car/CardCar.astro";
import SidebarFiltersDesktop from "~/components/sidebars/SidebarFiltersDesktop.astro";
import SidebarFiltersMobile from "~/components/sidebars/SidebarFiltersMobile.astro";
import Pagination from "~/components/Pagination.astro";
type Car = CollectionEntry<"cars">;

let url = new URL("/api/getFilteredCars.json", Astro.url);
let searchParams;

searchParams = new URLSearchParams(Astro.request.url.split("?")[1]);
url.search = searchParams.toString();

const response = await fetch(url);
const allCars: Car[] = await response.json();

const count = allCars.length > 0 ? allCars.length : 0;
const page = parseInt(searchParams.get("page") || "1");
const pageSize = 12;
const totalPages = Math.ceil(Array.isArray(allCars) ? allCars.length / pageSize : 0);
const paginatedCars = Array.isArray(allCars) ? allCars.slice((page - 1) * pageSize, page * pageSize) : [];
---

<Layout pageTitle={`Cars | ${siteName}`} description="Explore our range of cars for sale.">
	<Section class:list={"bg-gray-50"}>
		<Container class:list={"max-lg:px-0 max-lg:max-w-full"}>
			<div class="flex flex-col lg:flex-row">
				<SidebarFiltersMobile />

				<div class="lg:hidden bg-yellow-200 flex items-center justify-center p-2 mb-8">
					<button id="button-modal-filter-open" type="button" class="-m-2.5 p-2.5 lg:hidden">
						<span class="sr-only">Open filter</span>
						<div class="flex items-center space-x-2">
							<svg
								class="size-5"
								fill="none"
								viewBox="0 0 24 24"
								stroke-width="1.5"
								stroke="currentColor"
								aria-hidden="true"
								data-slot="icon"
							>
								<path
									stroke-linecap="round"
									stroke-linejoin="round"
									d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"></path>
							</svg>
							<span>Filter: found 12 cars</span>
						</div>
					</button>
				</div>

				<SidebarFiltersDesktop count={count} />

				<main class="lg:pl-16 grow">
					<div class="lg:px-8">
						<ul class="grid grid-cols-1 lg:gap-16">
							{
								paginatedCars.length > 0 ? (
									paginatedCars.map((car) => <CardCar car={car} />)
								) : (
									<li class="text-center text-gray-500">No results found</li>
								)
							}
						</ul>

						{
							paginatedCars.length > 0 && totalPages > 1 && (
								<Pagination page={page} totalPages={totalPages} searchParams={searchParams} />
							)
						}
					</div>
				</main>
			</div>
		</Container>
	</Section>
</Layout>

<script>
	document.addEventListener("astro:page-load", function () {
		const buttonModalFilterOpen = document.getElementById("button-modal-filter-open");
		const buttonModalFilterClose = document.getElementById("button-modal-filter-close");
		const sidebarFiltersMobile = document.getElementById("modal-filter") as HTMLDialogElement;

		if (sidebarFiltersMobile) {
			buttonModalFilterOpen?.addEventListener("click", () => {
				sidebarFiltersMobile.open = true;
			});

			buttonModalFilterClose?.addEventListener("click", () => {
				console.log("close");
				sidebarFiltersMobile.open = false;
			});
		}
	});
</script>
